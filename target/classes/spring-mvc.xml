<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop.xsd ">
        
        
        <!-- 配置自动扫描的包 -->
        <context:component-scan base-package="com.company.test"></context:component-scan>
       <!-- 启动AspectJ支持   只对扫描过的bean有效-->
    <aop:aspectj-autoproxy proxy-target-class="true" />
        <!-- 注册HandlerMapper、HandlerAdapter两个映射类,负责将请求映射到类和方法中 -->  
	    <mvc:annotation-driven />  
	    
	    <!-- 访问静态资源,如js, css文件等 -->  
	    <mvc:resources mapping="/css/**" location="/css/" ></mvc:resources>
	    <mvc:resources mapping="/js/**" location="/js/" ></mvc:resources>
	    <mvc:resources mapping="/image/**" location="/image/" ></mvc:resources>
	    <mvc:default-servlet-handler />  
        <!-- 配置视图解析器 如何把handler 方法返回值解析为实际的物理视图 -->
        <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
            <property name = "prefix" value="/jsp/"></property>
            <property name = "suffix" value = ".jsp"></property>
        </bean>
 <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
    <property name="messageConverters">  
      <list>  
        <ref bean="mappingJackson2HttpMessageConverter" />  
      </list>  
    </property>  
  </bean>  
  <bean id="mappingJackson2HttpMessageConverter" 
    class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
    <property name="supportedMediaTypes">  
      <list>  
        <value>text/html;charset=UTF-8</value>  
        <value>text/json;charset=UTF-8</value>  
        <value>application/json;charset=UTF-8</value>  
      </list>  
    </property>  
  </bean>
      
</beans>